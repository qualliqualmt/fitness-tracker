#BlueJ class context
comment0.target=LoginWindow
comment0.text=\r\n\ The\ LoginWindow\ class\ creates\ a\ simple\ login\ window\ for\ a\ fitness\ app.\r\n\ It\ contains\ a\ field\ for\ username,\ as\ well\ as\ login\ and\ register\ buttons.\r\n\ Usernames\ are\ stored\ persistently\ using\ Java\ Serialization\ (in\ a\ file).\r\n\ Case-insensitivity\ is\ implemented\ for\ usernames.\r\n\ Real-time\ feedback\ for\ username\ availability\ is\ provided.\r\n\ After\ successful\ registration,\ the\ username\ remains\ in\ the\ text\ field.\r\n\ Both\ button\ and\ text\ field\ sizes\ are\ fixed\ to\ prevent\ layout\ shifts.\r\n\ This\ class\ can\ be\ compiled\ and\ run\ in\ BlueJ.\r\n
comment1.params=
comment1.target=LoginWindow()
comment1.text=\r\n\ Constructor\ for\ the\ LoginWindow\ class.\r\n\ Initializes\ the\ GUI\ components,\ window\ layout,\ and\ loads\ users\ from\ file.\r\n
comment10.params=args
comment10.target=void\ main(java.lang.String[])
comment10.text=\r\n\ The\ main\ method\ is\ the\ entry\ point\ of\ the\ application.\r\n\ It\ creates\ an\ instance\ of\ the\ LoginWindow\ on\ the\ Event\ Dispatch\ Thread\ (EDT).\r\n\ @param\ args\ Command\ line\ arguments\ (not\ used).\r\n
comment11.params=
comment11.target=void\ run()
comment2.params=panel
comment2.target=void\ placeComponents(javax.swing.JPanel)
comment2.text=\r\n\ Places\ the\ GUI\ components\ on\ the\ given\ panel.\r\n\ Uses\ GridBagLayout\ for\ flexible\ arrangement.\r\n\ @param\ panel\ The\ JPanel\ on\ which\ the\ components\ are\ to\ be\ placed.\r\n
comment3.params=
comment3.target=void\ loadUsernames()
comment3.text=\r\n\ Loads\ registered\ usernames\ from\ the\ specified\ file\ using\ object\ deserialization.\r\n
comment4.params=
comment4.target=void\ saveUsernames()
comment4.text=\r\n\ Saves\ the\ current\ set\ of\ registered\ usernames\ to\ the\ specified\ file\ using\ object\ serialization.\r\n
comment5.params=
comment5.target=void\ checkUsernameAvailability()
comment5.text=\r\n\ Checks\ username\ availability\ and\ updates\ messageLabel\ in\ real-time.\r\n
comment6.params=e
comment6.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment6.text=\r\n\ This\ method\ is\ called\ when\ an\ ActionEvent\ (e.g.,\ button\ click)\ occurs.\r\n\ Handles\ login\ and\ registration\ logic.\r\n\ @param\ e\ The\ ActionEvent\ object.\r\n
comment7.params=e
comment7.target=void\ insertUpdate(javax.swing.event.DocumentEvent)
comment8.params=e
comment8.target=void\ removeUpdate(javax.swing.event.DocumentEvent)
comment9.params=e
comment9.target=void\ changedUpdate(javax.swing.event.DocumentEvent)
numComments=12
