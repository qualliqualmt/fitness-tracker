#BlueJ class context
comment0.target=FitnessAppGUI
comment0.text=\r\n\ The\ FitnessAppGUI\ class\ represents\ the\ main\ application\ window\ that\ opens\r\n\ after\ a\ successful\ login.\ It\ now\ extends\ JFrame\ and\ includes\ basic\ GUI\r\n\ components,\ while\ retaining\ its\ backend\ logic\ for\ user,\ exercise,\ and\ record\ management.\r\n
comment1.params=username
comment1.target=FitnessAppGUI(java.lang.String)
comment1.text=\r\n\ Constructor\ for\ the\ FitnessAppGUI\ class.\r\n\ Initializes\ the\ main\ application\ window\ and\ its\ components.\r\n\ @param\ username\ The\ username\ of\ the\ successfully\ logged-in\ user.\r\n
comment10.params=username\ exName
comment10.target=boolean\ createExercise(java.lang.String,\ java.lang.String)
comment11.params=username
comment11.target=java.util.List\ listExercises(java.lang.String)
comment12.params=username\ exName\ date\ repsAndWeights
comment12.target=boolean\ addRecord(java.lang.String,\ java.lang.String,\ java.lang.String,\ java.util.List)
comment13.params=username\ exName
comment13.target=java.util.List\ getRecords(java.lang.String,\ java.lang.String)
comment14.params=username\ exName
comment14.target=double\ calculateNextWeight(java.lang.String,\ java.lang.String)
comment14.text=\r\n\ Berechnet\ den\ Gewichtsvorschlag\ basierend\ auf\ dem\ Durchschnitt\ der\ Wiederholungen.\r\n\r\n\ Regeln\:\r\n\ -\ avg\ >\ 8\ \ \u2192\ +5%\ Gewicht\r\n\ -\ avg\ <\ 5\ \ \u2192\ -5%\ Gewicht\r\n\ -\ avg\ 5\u20138\ \u2192\ gleiches\ Gewicht\r\n\r\n\ @param\ username\ Benutzername\r\n\ @param\ exName\ \ \ \ Name\ der\ \u00DCbung\r\n\ @return\ Gewichtsvorschlag\ (auch\ wenn\ unver\u00E4ndert)\r\n
comment15.params=args
comment15.target=void\ main(java.lang.String[])
comment15.text=\r\n\ Main\ method\ for\ testing\ the\ FitnessAppGUI\ independently.\r\n\ This\ allows\ you\ to\ run\ the\ FitnessAppGUI\ directly\ without\ going\ through\ the\ LoginWindow.\r\n\ @param\ args\ Command\ line\ arguments\ (not\ used).\r\n
comment2.params=e
comment2.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment3.params=e
comment3.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment4.params=e
comment4.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment5.params=e
comment5.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment6.params=
comment6.target=void\ updateExerciseDropdown()
comment6.text=\r\n\ Updates\ the\ exercise\ dropdown\ with\ exercises\ for\ the\ current\ user.\r\n
comment7.params=exName
comment7.target=void\ displayRecords(java.lang.String)
comment7.text=\r\n\ Displays\ the\ records\ for\ the\ selected\ exercise\ in\ the\ text\ area.\r\n\ @param\ exName\ The\ name\ of\ the\ exercise.\r\n
comment8.params=username
comment8.target=boolean\ createUser(java.lang.String)
comment8.text=\r\n\ Creates\ a\ user\ directory.\ This\ method\ is\ now\ available\ if\ needed\ by\ other\ parts\ of\ the\ application.\r\n\ Note\:\ User\ registration\ (adding\ to\ users.ser)\ is\ handled\ by\ LoginWindow.\r\n\ @param\ username\ The\ username\ for\ which\ to\ create\ a\ directory.\r\n\ @return\ true\ if\ the\ directory\ was\ created\ or\ already\ exists,\ false\ otherwise.\r\n
comment9.params=
comment9.target=java.util.List\ listUsers()
numComments=16
